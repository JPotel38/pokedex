{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./node_modules/@ionic/core/dist/esm/button-active-4927a4c1.js","./node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","./src/app/enums/pokemon-types.enum.ts","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./src/app/services/all-pokemons.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,kCAAkC,MAAM,UAAU;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACtCrF;AAAA;AAAA;AAAA;AAAA;AAAqD;AACkE;AACnE;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAAa;AACtB;AACA;AACA;AACA,mEAAmE,qDAAoB;AACvF,kEAAkE,qDAAsB;AACxF;AACA;AACA,MAAM,6DAAkB;AACxB;AACA;AACA,GAAG;AACH;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AAA8D;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8DAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA,IAAY,KAcX;AAdD,WAAY,KAAK;IACf,sBAAa;IACb,wBAAe;IACf,wBAAe;IACf,8BAAqB;IACrB,oBAAW;IACX,sBAAa;IACb,4BAAmB;IACnB,8BAAqB;IACrB,wBAAe;IACf,wBAAe;IACf,0BAAiB;IACjB,0BAAiB;IACjB,0BAAiB;AACnB,CAAC,EAdW,KAAK,KAAL,KAAK,QAchB;AAED,IAAY,MAGX;AAHD,WAAY,MAAM;IAChB,uBAAa;IACb,2BAAiB;AACnB,CAAC,EAHW,MAAM,KAAN,MAAM,QAGjB;AAED,IAAY,KAkBX;AAlBD,WAAY,KAAK;IACf,8BAAqB;IACrB,+BAAsB;IACtB,+BAAsB;IACtB,kCAAyB;IACzB,6BAAoB;IACpB,8BAAqB;IACrB,iCAAwB;IACxB,kCAAyB;IACzB,+BAAsB;IACtB,+BAAsB;IACtB,gCAAuB;IACvB,gCAAuB;IACvB,gCAAuB;IACvB,+BAAsB;IACtB,6BAAoB;IACpB,gCAAuB;IACvB,gCAAuB;AACzB,CAAC,EAlBW,KAAK,KAAL,KAAK,QAkBhB;;;;;;;;;;;;;ACvCD;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;;;;;;;;ACzG3F;AAEwB;AACjB;IAKnC,kBAAkB,SAAlB,kBAAkB;IAI7B,YAAqB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QACnC,IAAI,CAAC,YAAY,GAAG;YAClB;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,+DAAK,CAAC,QAAQ;gBACpB,MAAM,EAAE,gEAAM,CAAC,IAAI;gBACnB,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,EAAE;gBACV,KAAK,EAAE,+DAAK,CAAC,aAAa;gBAC1B,GAAG,EAAE,oFAAoF;gBACzF,KAAK,EAAC,sDAAsD;aAC7D;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,YAAY;gBAClB,IAAI,EAAE,+DAAK,CAAC,IAAI;gBAChB,MAAM,EAAE,gEAAM,CAAC,MAAM;gBACrB,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,EAAE;gBACV,KAAK,EAAE,+DAAK,CAAC,SAAS;gBACtB,GAAG,EAAE,kGAAkG;gBACvG,KAAK,EAAC,sDAAsD;aAC7D;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,+DAAK,CAAC,KAAK;gBACjB,MAAM,EAAE,gEAAM,CAAC,IAAI;gBACnB,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,EAAE;gBACV,KAAK,EAAE,+DAAK,CAAC,UAAU;gBACvB,GAAG,EAAE,0FAA0F;gBAC/F,KAAK,EAAC,sDAAsD;aAC7D;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,+DAAK,CAAC,KAAK;gBACjB,MAAM,EAAE,gEAAM,CAAC,IAAI;gBACnB,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,EAAE;gBACV,KAAK,EAAE,+DAAK,CAAC,UAAU;gBACvB,GAAG,EAAE,sFAAsF;gBAC3F,KAAK,EAAC,sDAAsD;aAC7D;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,+DAAK,CAAC,MAAM;gBAClB,MAAM,EAAE,gEAAM,CAAC,IAAI;gBACnB,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,EAAE;gBACV,KAAK,EAAE,+DAAK,CAAC,WAAW;gBACxB,GAAG,EAAE,sFAAsF;gBAC3F,KAAK,EAAC,sDAAsD;aAC7D;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,+DAAK,CAAC,GAAG;gBACf,MAAM,EAAE,gEAAM,CAAC,MAAM;gBACrB,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,EAAE;gBACV,KAAK,EAAE,+DAAK,CAAC,QAAQ;gBACrB,GAAG,EAAE,oFAAoF;gBACzF,KAAK,EAAC,sDAAsD;aAC7D;SACF,CAAC;IAEJ,CAAC;IAED,iBAAiB,CAAC,EAAU;QAC1B,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;CACF;;YAxFO,+DAAU;;AAKL,kBAAkB;IAH9B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,kBAAkB,CAmF9B;AAnF8B","file":"common.js","sourcesContent":["const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-f49d994d.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","export enum Types {\n  fire = 'fire',\n  grass = 'grass',\n  water = 'water',\n  electrik = 'electrik',\n  fly = 'fly',\n  rock = 'rock',\n  spectre = 'spectre',\n  darkness = 'darkness',\n  fight = 'fight',\n  steel = 'steel',\n  dragon = 'dragon',\n  insect = 'insect',\n  normal = 'normal'\n}\n\nexport enum Gender {\n  male = 'male',\n  female = 'female'\n}\n\nexport enum Color {\n  fireColor = '#f75231',\n  grassColor = '#7bce52',\n  waterColor = '#399cff',\n  electrikColor = '#ffc631',\n  flyColor = '#ada594',\n  rockColor = '#bda55a',\n  spectreColor = '#6363b5',\n  darknessColor = '#735a4a',\n  fightColor = '#a55239',\n  steelColor = '#ada594',\n  dragonColor = '#8858f6',\n  insectColor = '#adbd21',\n  normalColor = '#ada594',\n  fairyColor = '#e09ae3',\n  psyColor = '#ff73a5',\n  groundColor = '#d6b55a',\n  poisonColor = '#b55aa5'\n}\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","import {Injectable} from '@angular/core';\nimport {Pokemon} from '../interfaces/pokemon';\nimport {Color, Gender, Types} from '../enums/pokemon-types.enum';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AllPokemonsService {\n\n  pokemonArray: Array<Pokemon>;\n\n  constructor(readonly http: HttpClient) {\n    this.pokemonArray = [\n      {\n        id: 1,\n        name: 'Pikachu',\n        type: Types.electrik,\n        gender: Gender.male,\n        height: 1,\n        weight: 10,\n        color: Color.electrikColor,\n        img: 'https://www.pokepedia.fr/images/thumb/e/e7/Pikachu-RFVF.png/375px-Pikachu-RFVF.png',\n        audio:'https://www.pokepedia.fr/images/e/ec/Cri_4_d_025.ogg'\n      },\n      {\n        id: 2,\n        name: 'Charmander',\n        type: Types.fire,\n        gender: Gender.female,\n        height: 1,\n        weight: 10,\n        color: Color.fireColor,\n        img: 'https://www.pokepedia.fr/images/thumb/8/89/Salam%C3%A8che-RFVF.png/375px-Salam%C3%A8che-RFVF.png',\n        audio:'https://www.pokepedia.fr/images/c/cf/Cri_4_d_004.ogg'\n      },\n      {\n        id: 3,\n        name: 'Bulbasaur',\n        type: Types.grass,\n        gender: Gender.male,\n        height: 1,\n        weight: 10,\n        color: Color.grassColor,\n        img: 'https://www.pokepedia.fr/images/thumb/e/ef/Bulbizarre-RFVF.png/375px-Bulbizarre-RFVF.png',\n        audio:'https://www.pokepedia.fr/images/9/97/Cri_6_x_001.ogg'\n      },\n      {\n        id: 4,\n        name: 'Squirtle',\n        type: Types.water,\n        gender: Gender.male,\n        height: 1,\n        weight: 10,\n        color: Color.waterColor,\n        img: 'https://www.pokepedia.fr/images/thumb/c/cc/Carapuce-RFVF.png/375px-Carapuce-RFVF.png',\n        audio:'https://www.pokepedia.fr/images/f/f4/Cri_4_d_007.ogg'\n      },\n      {\n        id: 5,\n        name: 'Caterpie',\n        type: Types.insect,\n        gender: Gender.male,\n        height: 1,\n        weight: 10,\n        color: Color.insectColor,\n        img: 'https://www.pokepedia.fr/images/thumb/c/c7/Chenipan-RFVF.png/375px-Chenipan-RFVF.png',\n        audio:'https://www.pokepedia.fr/images/f/f9/Cri_4_d_017.ogg'\n      },\n      {\n        id: 6,\n        name: 'Pidgeotto',\n        type: Types.fly,\n        gender: Gender.female,\n        height: 1,\n        weight: 10,\n        color: Color.flyColor,\n        img: 'https://www.pokepedia.fr/images/thumb/9/94/Roucool-RFVF.png/375px-Roucool-RFVF.png',\n        audio:'https://www.pokepedia.fr/images/4/4c/Cri_4_d_010.ogg'\n      },\n    ];\n\n  }\n\n  getDetailsPokemon(id: number) {\n    return this.pokemonArray[id - 1];\n  }\n\n  getAllPokemons(): Array<Pokemon> {\n    return this.pokemonArray;\n  }\n}\n"],"sourceRoot":"webpack:///"}